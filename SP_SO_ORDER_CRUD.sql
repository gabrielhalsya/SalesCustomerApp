ALTER PROCEDURE [dbo].[SP_SO_ORDER_CRUD]
    @P_ACTION         VARCHAR(10),
    @P_SO_ORDER_ID    BIGINT = NULL,
    @P_ORDER_NO       VARCHAR(20) = NULL,
    @P_ORDER_DATE     VARCHAR(8) = NULL, -- Accept date as string (yyyyMMdd)
    @P_COM_CUSTOMER_ID INT = NULL
AS
BEGIN
    SET NOCOUNT ON;
    DECLARE @ERROR_TABLE TABLE (Err_Code VARCHAR(20));
    DECLARE @ORDER_DATE_CONVERTED DATE;

    -- ✅ Convert yyyyMMdd string to DATE safely
    IF @P_ORDER_DATE IS NOT NULL
    BEGIN
        SET @ORDER_DATE_CONVERTED = CONVERT(DATE, @P_ORDER_DATE, 112);
        IF @ORDER_DATE_CONVERTED IS NULL
            INSERT INTO @ERROR_TABLE VALUES ('2004'); -- Invalid date format
    END

    BEGIN TRANSACTION;

    IF @P_ACTION = 'INSERT'
    BEGIN
        IF EXISTS (SELECT 1 FROM SO_ORDER WHERE ORDER_NO = @P_ORDER_NO)
            INSERT INTO @ERROR_TABLE VALUES ('2001'); -- Duplicate order number

        IF NOT EXISTS (SELECT 1 FROM COM_CUSTOMER WHERE COM_CUSTOMER_ID = @P_COM_CUSTOMER_ID)
            INSERT INTO @ERROR_TABLE VALUES ('2002'); -- Customer not found

        IF NOT EXISTS (SELECT 1 FROM @ERROR_TABLE)
        BEGIN
            INSERT INTO SO_ORDER (ORDER_NO, ORDER_DATE, COM_CUSTOMER_ID)
            VALUES (@P_ORDER_NO, @ORDER_DATE_CONVERTED, @P_COM_CUSTOMER_ID);

            SELECT SCOPE_IDENTITY() AS SO_ORDER_ID, NULL AS Err_Code;
        END
        ELSE
        BEGIN
            SELECT NULL AS SO_ORDER_ID, Err_Code FROM @ERROR_TABLE;
            ROLLBACK TRANSACTION;
            RETURN;
        END
    END
    ELSE IF @P_ACTION = 'UPDATE'
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM SO_ORDER WHERE SO_ORDER_ID = @P_SO_ORDER_ID)
            INSERT INTO @ERROR_TABLE VALUES ('2003'); -- Order not found

        IF NOT EXISTS (SELECT 1 FROM @ERROR_TABLE)
        BEGIN
            UPDATE SO_ORDER
            SET ORDER_NO = @P_ORDER_NO,
                ORDER_DATE = @ORDER_DATE_CONVERTED,
                COM_CUSTOMER_ID = @P_COM_CUSTOMER_ID
            WHERE SO_ORDER_ID = @P_SO_ORDER_ID;

            SELECT @P_SO_ORDER_ID AS SO_ORDER_ID, NULL AS Err_Code;
        END
        ELSE
        BEGIN
            SELECT NULL AS SO_ORDER_ID, Err_Code FROM @ERROR_TABLE;
            ROLLBACK TRANSACTION;
            RETURN;
        END
    END
    ELSE IF @P_ACTION = 'DELETE'
    BEGIN
        IF NOT EXISTS (SELECT 1 FROM SO_ORDER WHERE SO_ORDER_ID = @P_SO_ORDER_ID)
            INSERT INTO @ERROR_TABLE VALUES ('2003'); -- Order not found

        IF NOT EXISTS (SELECT 1 FROM @ERROR_TABLE)
        BEGIN
            DELETE FROM SO_ORDER WHERE SO_ORDER_ID = @P_SO_ORDER_ID;
            SELECT @P_SO_ORDER_ID AS SO_ORDER_ID, NULL AS Err_Code;
        END
        ELSE
        BEGIN
            SELECT NULL AS SO_ORDER_ID, Err_Code FROM @ERROR_TABLE;
            ROLLBACK TRANSACTION;
            RETURN;
        END
    END
    ELSE IF @P_ACTION = 'VIEW'
    BEGIN
        SELECT 
            O.SO_ORDER_ID,
            O.ORDER_NO, 
            CONVERT(VARCHAR(8), O.ORDER_DATE, 112) AS ORDER_DATE, -- Convert to yyyyMMdd
            C.CUSTOMER_NAME
        FROM SO_ORDER O
        LEFT JOIN COM_CUSTOMER C ON O.COM_CUSTOMER_ID = C.COM_CUSTOMER_ID;
    END
    ELSE
    BEGIN
        INSERT INTO @ERROR_TABLE VALUES ('9999'); -- Invalid action
        SELECT NULL AS SO_ORDER_ID, Err_Code FROM @ERROR_TABLE;
        ROLLBACK TRANSACTION;
        RETURN;
    END

    COMMIT TRANSACTION;
END;